{
	"name": "pl_raw_to_stg_nyctaxi",
	"properties": {
		"activities": [
			{
				"name": "DeleteStagingPartition",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_syn_sql",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "DELETE FROM stg.trip WHERE ingest_date = '@{pipeline().parameters.run_date}';\n",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "GetFileList",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "DeleteStagingPartition",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_raw_folder",
						"type": "DatasetReference",
						"parameters": {
							"p_dataset": {
								"value": "p_dataset = @pipeline().parameters.dataset",
								"type": "Expression"
							},
							"p_run_date": {
								"value": "p_run_date = @pipeline().parameters.run_date",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "FilterParquet",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "GetFileList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileList').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(equals(item().type, 'File'),endsWith(item().name,'.parquet'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FilterParquet",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FilterParquet').output.value",
						"type": "Expression"
					},
					"batchCount": 4,
					"activities": [
						{
							"name": "IfNeedsSnappy",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(endsWith(item().name,'.snappy.millis.parquet'))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "ConvertToSnappy",
										"type": "SynapseNotebook",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"notebook": {
												"referenceName": {
													"value": "nb_convert_parquet_to_snappy",
													"type": "Expression"
												},
												"type": "NotebookReference"
											},
											"parameters": {
												"account": {
													"value": "eltazr3adls",
													"type": "string"
												},
												"file_system": {
													"value": "raw",
													"type": "string"
												},
												"dataset": {
													"value": {
														"value": "@pipeline().parameters.dataset",
														"type": "Expression"
													},
													"type": "string"
												},
												"ingest_date": {
													"value": {
														"value": "@pipeline().parameters.run_date",
														"type": "Expression"
													},
													"type": "string"
												},
												"src_file_name": {
													"value": {
														"value": "@item().name",
														"type": "Expression"
													},
													"type": "string"
												},
												"tgt_file_name": {
													"value": {
														"value": "@replace(item().name, '.parquet', '.snappy.millis.parquet')",
														"type": "Expression"
													},
													"type": "string"
												}
											},
											"snapshot": true,
											"sparkPool": {
												"referenceName": {
													"value": "spsmall",
													"type": "Expression"
												},
												"type": "BigDataPoolReference"
											},
											"executorSize": "Small",
											"conf": {
												"spark.dynamicAllocation.enabled": null,
												"spark.dynamicAllocation.minExecutors": null,
												"spark.dynamicAllocation.maxExecutors": null
											},
											"driverSize": "Small",
											"numExecutors": null
										},
										"linkedServiceName": {
											"referenceName": "AzureSynapseArtifacts1",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "CopyToStaging",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "ConvertToSnappy",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "ParquetSource",
												"additionalColumns": [
													{
														"name": "ingest_date",
														"value": "@{pipeline().parameters.run_date}"
													},
													{
														"name": "source_file_name",
														"value": "@{item().name}"
													},
													{
														"name": "loaded_at",
														"value": "@{utcnow()}"
													}
												],
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "ParquetReadSettings"
												}
											},
											"sink": {
												"type": "SqlDWSink",
												"writeBehavior": "Insert",
												"sqlWriterUseTableLock": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"mappings": [
													{
														"source": {
															"name": "VendorID",
															"type": "Int32",
															"physicalType": "INT32"
														},
														"sink": {
															"name": "VendorID",
															"type": "Int16",
															"physicalType": "smallint"
														}
													},
													{
														"source": {
															"name": "tpep_pickup_datetime",
															"physicalType": "TIMESTAMP_MICROS"
														},
														"sink": {
															"name": "tpep_pickup_datetime",
															"type": "DateTime",
															"physicalType": "datetime2"
														}
													},
													{
														"source": {
															"name": "tpep_dropoff_datetime",
															"physicalType": "TIMESTAMP_MICROS"
														},
														"sink": {
															"name": "tpep_dropoff_datetime",
															"type": "DateTime",
															"physicalType": "datetime2"
														}
													},
													{
														"source": {
															"name": "passenger_count",
															"type": "Int64",
															"physicalType": "INT64"
														},
														"sink": {
															"name": "passenger_count",
															"type": "Int16",
															"physicalType": "smallint"
														}
													},
													{
														"source": {
															"name": "trip_distance",
															"type": "Double",
															"physicalType": "DOUBLE"
														},
														"sink": {
															"name": "trip_distance",
															"type": "Decimal",
															"physicalType": "decimal",
															"scale": 3,
															"precision": 9
														}
													},
													{
														"source": {
															"name": "RatecodeID",
															"type": "Int64",
															"physicalType": "INT64"
														},
														"sink": {
															"name": "RatecodeID",
															"type": "Int16",
															"physicalType": "smallint"
														}
													},
													{
														"source": {
															"name": "store_and_fwd_flag",
															"type": "String",
															"physicalType": "UTF8"
														},
														"sink": {
															"name": "store_and_fwd_flag",
															"type": "String",
															"physicalType": "char"
														}
													},
													{
														"source": {
															"name": "PULocationID",
															"type": "Int32",
															"physicalType": "INT32"
														},
														"sink": {
															"name": "PULocationID",
															"type": "Int16",
															"physicalType": "smallint"
														}
													},
													{
														"source": {
															"name": "DOLocationID",
															"type": "Int32",
															"physicalType": "INT32"
														},
														"sink": {
															"name": "DOLocationID",
															"type": "Int16",
															"physicalType": "smallint"
														}
													},
													{
														"source": {
															"name": "payment_type",
															"type": "Int64",
															"physicalType": "INT64"
														},
														"sink": {
															"name": "payment_type",
															"type": "Int16",
															"physicalType": "smallint"
														}
													},
													{
														"source": {
															"name": "fare_amount",
															"type": "Double",
															"physicalType": "DOUBLE"
														},
														"sink": {
															"name": "fare_amount",
															"type": "Decimal",
															"physicalType": "decimal",
															"scale": 2,
															"precision": 10
														}
													},
													{
														"source": {
															"name": "extra",
															"type": "Double",
															"physicalType": "DOUBLE"
														},
														"sink": {
															"name": "extra",
															"type": "Decimal",
															"physicalType": "decimal",
															"scale": 2,
															"precision": 10
														}
													},
													{
														"source": {
															"name": "mta_tax",
															"type": "Double",
															"physicalType": "DOUBLE"
														},
														"sink": {
															"name": "mta_tax",
															"type": "Decimal",
															"physicalType": "decimal",
															"scale": 2,
															"precision": 10
														}
													},
													{
														"source": {
															"name": "tip_amount",
															"type": "Double",
															"physicalType": "DOUBLE"
														},
														"sink": {
															"name": "tip_amount",
															"type": "Decimal",
															"physicalType": "decimal",
															"scale": 2,
															"precision": 10
														}
													},
													{
														"source": {
															"name": "tolls_amount",
															"type": "Double",
															"physicalType": "DOUBLE"
														},
														"sink": {
															"name": "tolls_amount",
															"type": "Decimal",
															"physicalType": "decimal",
															"scale": 2,
															"precision": 10
														}
													},
													{
														"source": {
															"name": "improvement_surcharge",
															"type": "Double",
															"physicalType": "DOUBLE"
														},
														"sink": {
															"name": "improvement_surcharge",
															"type": "Decimal",
															"physicalType": "decimal",
															"scale": 2,
															"precision": 10
														}
													},
													{
														"source": {
															"name": "total_amount",
															"type": "Double",
															"physicalType": "DOUBLE"
														},
														"sink": {
															"name": "total_amount",
															"type": "Decimal",
															"physicalType": "decimal",
															"scale": 2,
															"precision": 10
														}
													},
													{
														"source": {
															"name": "congestion_surcharge",
															"type": "Double",
															"physicalType": "DOUBLE"
														},
														"sink": {
															"name": "congestion_surcharge",
															"type": "Decimal",
															"physicalType": "decimal",
															"scale": 2,
															"precision": 10
														}
													},
													{
														"source": {
															"name": "Airport_fee",
															"type": "Double",
															"physicalType": "DOUBLE"
														},
														"sink": {
															"name": "airport_fee",
															"type": "Decimal",
															"physicalType": "decimal",
															"scale": 2,
															"precision": 10
														}
													},
													{
														"source": {
															"name": "ingest_date",
															"type": "String"
														},
														"sink": {
															"name": "ingest_date",
															"type": "Date",
															"physicalType": "date"
														}
													},
													{
														"source": {
															"name": "source_file_name",
															"type": "String"
														},
														"sink": {
															"name": "source_file_name",
															"type": "String",
															"physicalType": "nvarchar"
														}
													},
													{
														"source": {
															"name": "loaded_at",
															"type": "String"
														},
														"sink": {
															"name": "loaded_at",
															"type": "DateTime",
															"physicalType": "datetime2"
														}
													}
												],
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "ds_raw_parquet",
												"type": "DatasetReference",
												"parameters": {
													"p_dataset": "@pipeline().parameters.dataset",
													"p_run_date": "@pipeline().parameters.run_date",
													"p_file_name": {
														"value": "@if(endsWith(item().name,'.snappy.millis.parquet'), item().name, replace(item().name, '.parquet', '.snappy.millis.parquet'))",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_syn_stg_trip",
												"type": "DatasetReference"
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"dataset": {
				"type": "string",
				"defaultValue": "nyctaxi_yellow"
			},
			"run_date": {
				"type": "string",
				"defaultValue": "@formatDateTime(utcnow(),'yyyy-MM-dd')"
			},
			"file_name": {
				"type": "string"
			},
			"run_id": {
				"type": "string",
				"defaultValue": "@pipeline().RunId"
			}
		},
		"annotations": []
	}
}