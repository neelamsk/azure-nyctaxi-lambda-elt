name: streaming-bicep-deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'infra/streaming-bicep/**'
      - '.github/workflows/streaming-bicep-deploy.yml'
  workflow_dispatch:

env:
  RESOURCE_GROUP: rg-nyctaxi-stream
  LOCATION: eastus2
  TEMPLATE_FILE: infra/streaming-bicep/main.bicep
  PARAM_FILE: infra/streaming-bicep/params.dev.json
  COMPILED_JSON: infra/streaming-bicep/compiled.arm.json

concurrency:
  group: streaming-bicep-deploy
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: streaming-dev   # ensure matching OIDC federated credential exists
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Who am I (debug)
        uses: azure/cli@v2
        with:
          inlineScript: |
            az account show -o table

      - name: Ensure StreamAnalytics provider registered
        uses: azure/cli@v2
        with:
          inlineScript: |
            az provider register --namespace Microsoft.StreamAnalytics
            az provider show -n Microsoft.StreamAnalytics -o table

      - name: Ensure RG exists
        uses: azure/cli@v2
        with:
          inlineScript: |
            az group create -n "$RESOURCE_GROUP" -l "$LOCATION"

      # Compile Bicep -> ARM JSON into the repo workspace (persist across steps)
      - name: Compile Bicep to ARM JSON (debug)
        uses: azure/cli@v2
        with:
          inlineScript: |
            set -e
            az bicep install || true
            az bicep version
            az bicep build --file "$TEMPLATE_FILE" --stdout > "$COMPILED_JSON"
            echo "----- ASA job block (type, name, sku) from compiled JSON -----"
            if command -v jq >/dev/null 2>&1; then
              cat "$COMPILED_JSON" \
                | jq '.resources[] | select(.type=="Microsoft.StreamAnalytics/streamingjobs") | {type, name, sku: .sku}'
            else
              grep -nE '"Microsoft.StreamAnalytics/streamingjobs"|\"sku\"' "$COMPILED_JSON" || true
            fi

      # IMPORTANT: Deploy the compiled JSON, not the .bicep
      - name: Deploy compiled ARM template (incremental)
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          template: ${{ env.COMPILED_JSON }}
          parameters: ${{ env.PARAM_FILE }}
          deploymentName: stream-deploy-${{ github.run_id }}
          failOnStdErr: false   # ignore warnings printed to stderr

      # Cost-safe default: stop ASA so you aren't billed after deploy
      - name: Stop ASA job (cost-safe)
        uses: azure/cli@v2
        with:
          inlineScript: |
            az extension add -n stream-analytics -y || true
            az stream-analytics job stop -g "$RESOURCE_GROUP" -n "asa-nyctaxi-trip" || true
